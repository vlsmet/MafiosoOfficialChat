<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –†–æ–ª–µ–π - Mafioso Official</title>
    <link rel="stylesheet" type="text/css" href="styles.css"/>
    <style type="text/css">
        body {
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            min-height: 100vh;
        }
        
        .constructor-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
            position: relative;
            z-index: 10;
        }
        
        .constructor-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
            margin-top: 2rem;
        }
        
        .form-section {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #e8e8e8;
            font-size: 0.95rem;
        }
        
        .form-input, .form-textarea, .form-select {
            width: 100%;
            background: rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.15);
            border-radius: 8px;
            padding: 0.75rem;
            color: #e8e8e8;
            font-size: 1rem;
            transition: all 0.3s ease;
        }
        
        .form-input:focus, .form-textarea:focus, .form-select:focus {
            outline: none;
            border-color: #dc3545;
            background: rgba(0, 0, 0, 0.6);
            box-shadow: 0 0 10px rgba(220, 53, 69, 0.3);
        }
        
        .form-textarea {
            resize: vertical;
            min-height: 100px;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }
        
        .faction-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }
        
        .faction-btn {
            padding: 1rem;
            border: 2px solid rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.03);
            color: #e8e8e8;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1rem;
        }
        
        .faction-btn:hover {
            background: rgba(255, 255, 255, 0.08);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(220, 53, 69, 0.2);
        }
        
        .faction-btn.active {
            border-color: #dc3545;
            background: rgba(220, 53, 69, 0.15);
            box-shadow: 0 0 20px rgba(220, 53, 69, 0.3);
        }
        
        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: rgba(0, 0, 0, 0.4);
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }
        
        .checkbox-group:hover {
            background: rgba(0, 0, 0, 0.5);
            border-color: rgba(220, 53, 69, 0.3);
        }
        
        .checkbox-group input {
            width: 20px;
            height: 20px;
            cursor: pointer;
        }
        
        .action-card {
            background: rgba(0, 0, 0, 0.4);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-left: 4px solid #dc3545;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }
        
        .action-card:hover {
            transform: translateX(5px);
            box-shadow: 0 12px 40px rgba(220, 53, 69, 0.2);
        }
        
        .action-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }
        
        .action-title {
            font-size: 1.3rem;
            color: #ffd700;
            font-weight: bold;
        }
        
        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #c82333, #bd2130);
            box-shadow: 0 6px 20px rgba(220, 53, 69, 0.4);
        }
        
        .btn-success {
            background: linear-gradient(135deg, #28a745, #218838);
            color: white;
        }
        
        .btn-success:hover {
            background: linear-gradient(135deg, #218838, #1e7e34);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
        }
        
        .btn-danger {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
            padding: 0.5rem 1rem;
        }
        
        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #5a6268);
            color: white;
            padding: 0.5rem 1rem;
        }
        
        .sidebar {
            position: sticky;
            top: 2rem;
        }
        
        .preview-box {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }
        
        .preview-box:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(220, 53, 69, 0.2);
        }
        
        .preview-title {
            font-size: 1.3rem;
            font-weight: bold;
            color: #ffd700;
            margin-bottom: 1rem;
            text-shadow: 0 0 10px rgba(255, 215, 0, 0.3);
        }
        
        .json-output {
            background: rgba(0, 0, 0, 0.7);
            border: 1px solid rgba(40, 167, 69, 0.3);
            border-radius: 8px;
            padding: 1rem;
            color: #28a745;
            font-family: 'Courier New', monospace;
            font-size: 0.85rem;
            max-height: 400px;
            overflow: auto;
            white-space: pre-wrap;
            word-wrap: break-word;
            box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.5);
        }
        
        .stats-item {
            display: flex;
            justify-content: space-between;
            padding: 0.75rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            color: #b8b8b8;
            transition: all 0.3s ease;
        }
        
        .stats-item:hover {
            color: #e8e8e8;
            padding-left: 0.5rem;
        }
        
        .stats-item:last-child {
            border-bottom: none;
        }
        
        .section-divider {
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding-top: 1rem;
            margin-top: 1rem;
        }
        
        .emoji-select {
            font-size: 2rem;
            text-align: center;
            background: rgba(0, 0, 0, 0.5);
        }
        
        .constructor-header {
            text-align: center;
            margin-bottom: 2rem;
            padding: 2rem;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .constructor-header h1 {
            font-size: 2.5rem;
            background: linear-gradient(135deg, #dc3545, #c82333, #bd2130);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-shadow: 0 0 30px rgba(220, 53, 69, 0.5);
            margin-bottom: 0.5rem;
            font-weight: 900;
            letter-spacing: 2px;
        }
        
        .constructor-header p {
            color: #b8b8b8;
            font-size: 1.1rem;
        }
        
        @media (max-width: 1024px) {
            .constructor-grid {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                position: static;
            }
        }
    </style>
</head>
<body class="index-body">
    <div class="main-menu-btn-container">
        <a href="index.xhtml" class="back-btn">‚¨Ö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</a>
    </div>

    <div class="constructor-container">
        <header class="constructor-header">
            <h1>üé≠ –ö–û–ù–°–¢–†–£–ö–¢–û–† –†–û–õ–ï–ô MAFIOSO üé≠</h1>
            <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–æ–ª—å –¥–ª—è –∏–≥—Ä—ã</p>
        </header>

        <div class="constructor-grid">
            <!-- Main Form -->
            <div>
                <!-- Basic Info -->
                <div class="form-section">
                    <h2 style="color: #dc3545; margin-bottom: 1.5rem; font-size: 1.8rem;">üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
                    
                    <div class="form-row">
                        <div class="form-group" style="grid-column: 1 / -1;">
                            <label class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏</label>
                            <input type="text" id="roleName" class="form-input" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏"/>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">–≠–º–æ–¥–∂–∏ —Ä–æ–ª–∏ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)</label>
                            <input type="text" id="roleEmoji" class="form-input" placeholder="üé≠" style="font-size: 1.5rem; text-align: center;"/>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Custom Emoji ID (–ø—Ä–µ–º–∏—É–º)</label>
                            <input type="number" id="customEmojiId" class="form-input" placeholder="–û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –µ—Å–ª–∏ –Ω–µ –ø—Ä–µ–º–∏—É–º"/>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏</label>
                        <textarea id="roleDescription" class="form-textarea" placeholder="–û–ø–∏—à–∏—Ç–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏ –∑–∞–¥–∞—á–∏ —Ä–æ–ª–∏"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">–§—Ä–∞–∫—Ü–∏—è</label>
                        <div class="faction-grid">
                            <button type="button" class="faction-btn active" data-faction="RoleFractonPeace" onclick="selectFaction(this)">
                                üåø –ú–∏—Ä–Ω–∞—è —Ñ—Ä–∞–∫—Ü–∏—è
                            </button>
                            <button type="button" class="faction-btn" data-faction="RoleFractonMafia" onclick="selectFaction(this)">
                                üï∂ –§—Ä–∞–∫—Ü–∏—è –º–∞—Ñ–∏–∏
                            </button>
                            <button type="button" class="faction-btn" data-faction="RoleFractonNeutral" onclick="selectFraction(this)">
                                ‚öñÔ∏è –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è
                            </button>
                            <button type="button" class="faction-btn" data-faction="RoleFractonKiller" onclick="selectFaction(this)">
                                üî™ –£–±–∏–π—Ü–∞
                            </button>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">–ù–∞–≥—Ä–∞–¥–∞ (‚ÇΩ)</label>
                            <input type="number" id="cashAward" class="form-input" value="0" min="0"/>
                        </div>
                        <div class="form-group">
                            <label class="form-label">–ú–∏–Ω. –∏–≥—Ä–æ–∫–æ–≤</label>
                            <input type="number" id="requiredPlayers" class="form-input" value="5" min="1"/>
                        </div>
                        <div class="form-group">
                            <label class="form-label">–í–µ—Å –≥–æ–ª–æ—Å–∞</label>
                            <input type="number" id="weightVote" class="form-input" value="1" min="1"/>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="checkbox-group">
                            <input type="checkbox" id="revengeKill"/>
                            <label for="revengeKill">‚ò†Ô∏è –ú–µ—Å—Ç—å —É–±–∏–π—Ü–µ</label>
                        </div>
                        <div class="checkbox-group">
                            <input type="checkbox" id="enabled" checked="checked"/>
                            <label for="enabled">‚úÖ –†–æ–ª—å –∞–∫—Ç–∏–≤–Ω–∞</label>
                        </div>
                    </div>
                    
                    <div class="section-divider">
                        <div class="form-group">
                            <label class="form-label">–°–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è</label>
                            <input type="text" id="msgSelectAction" class="form-input" value="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"/>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞</label>
                                <input type="text" id="skipBtnName" class="form-input" value="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥"/>
                            </div>
                            <div class="form-group">
                                <label class="form-label">–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞</label>
                                <input type="text" id="skipMessage" class="form-input" value="–ò–≥—Ä–æ–∫ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥"/>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Actions Section -->
                <div class="form-section">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                        <h2 style="color: #dc3545; font-size: 1.8rem;">‚ö° –î–µ–π—Å—Ç–≤–∏—è —Ä–æ–ª–∏</h2>
                        <button type="button" class="btn btn-primary" onclick="addAction()">‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ</button>
                    </div>
                    
                    <div id="actionsContainer">
                        <p style="text-align: center; color: #888; padding: 2rem;">–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ"</p>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- API Config -->
                <div class="preview-box">
                    <h3 class="preview-title">‚öôÔ∏è API –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</h3>
                    <div class="form-group">
                        <label class="form-label">Chat ID</label>
                        <input type="text" id="chatId" class="form-input" placeholder="-1001234567890"/>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Role ID (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)</label>
                        <input type="text" id="roleId" class="form-input" placeholder="123"/>
                    </div>
                </div>

                <!-- Actions -->
                <div class="preview-box">
                    <h3 class="preview-title">üõ†Ô∏è –î–µ–π—Å—Ç–≤–∏—è</h3>
                    <button type="button" class="btn btn-success" onclick="generateAddNew()" style="width: 100%; margin-bottom: 0.5rem;">
                        üìã –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ä–æ–ª—å
                    </button>
                    <button type="button" class="btn btn-primary" onclick="generateEdit()" style="width: 100%; margin-bottom: 0.5rem;">
                        üíæ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–æ–ª—å
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="resetForm()" style="width: 100%;">
                        üîÑ –û—á–∏—Å—Ç–∏—Ç—å —Ñ–æ—Ä–º—É
                    </button>
                </div>

                <!-- JSON Output -->
                <div class="preview-box" id="jsonPreviewBox" style="display: none;">
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                        <h3 class="preview-title" style="margin: 0;">üìã JSON Output</h3>
                        <button type="button" class="btn btn-secondary" onclick="copyJson()" style="padding: 0.5rem 1rem;">
                            üìÑ –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                    </div>
                    <div class="json-output" id="jsonOutput"></div>
                </div>

                <!-- Preview -->
                <div class="preview-box">
                    <h3 class="preview-title">üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</h3>
                    <div id="rolePreview" style="color: #888; text-align: center;">
                        –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                    </div>
                </div>

                <!-- Stats -->
                <div class="preview-box">
                    <h3 class="preview-title">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                    <div id="statsContainer">
                        <div class="stats-item">
                            <span>–í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π:</span>
                            <span id="statActions">0</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
    <![CDATA[
        var actionCounter = 0;
        var selectedFaction = 'RoleFractonPeace';

        function selectFaction(btn) {
            var buttons = document.querySelectorAll('.faction-btn');
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].classList.remove('active');
            }
            btn.classList.add('active');
            selectedFaction = btn.getAttribute('data-faction');
            updatePreview();
        }

        function addAction() {
            actionCounter++;
            var container = document.getElementById('actionsContainer');
            
            if (container.querySelector('p')) {
                container.innerHTML = '';
            }
            
            var actionHtml = '<div class="action-card" id="action' + actionCounter + '">' +
                '<div class="action-header">' +
                '<span class="action-title">–î–µ–π—Å—Ç–≤–∏–µ #' + actionCounter + '</span>' +
                '<button type="button" class="btn btn-danger" onclick="removeAction(' + actionCounter + ')">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>' +
                '</div>' +
                '<div class="form-row">' +
                '<div class="form-group">' +
                '<label class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è</label>' +
                '<input type="text" class="form-input action-name" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è"/>' +
                '</div>' +
                '<div class="form-group">' +
                '<label class="form-label">–¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è</label>' +
                '<select class="form-select action-type">' +
                '<option value="RoleActionTypeKill">üî™ –£–±–∏—Ç—å</option>' +
                '<option value="RoleActionTypeHealing">üíö –í—ã–ª–µ—á–∏—Ç—å</option>' +
                '<option value="RoleActionTypeFreeze">‚ùÑÔ∏è –ó–∞–º–æ—Ä–æ–∑–∏—Ç—å</option>' +
                '<option value="RoleActionTypeEmpty">‚≠ï –ü—É—Å—Ç–æ–π —Ö–æ–¥</option>' +
                '</select>' +
                '</div>' +
                '</div>' +
                '<div class="form-row">' +
                '<div class="form-group">' +
                '<label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–ª–µ–π</label>' +
                '<input type="number" class="form-input action-victims" value="1" min="1"/>' +
                '</div>' +
                '<div class="form-group">' +
                '<label class="form-label">–ö—É–ª–¥–∞—É–Ω (–Ω–æ—á–µ–π)</label>' +
                '<input type="number" class="form-input action-cooldown" value="0" min="0"/>' +
                '</div>' +
                '</div>' +
                '<div class="section-divider">' +
                '<p style="color: #4a90e2; font-weight: 600; margin-bottom: 0.5rem;">üì§ –°–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞</p>' +
                '<input type="text" class="form-input action-process-msg" placeholder="–¢–µ–∫—Å—Ç –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è (msg)" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-process-pm" placeholder="–¢–µ–∫—Å—Ç –ø—Ä–æ–ø—É—Å–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è (msg_pm)" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-process-chat" placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∏–≥—Ä–æ–≤–æ–º —á–∞—Ç–µ (msg_chat)"/>' +
                '</div>' +
                '<div class="section-divider">' +
                '<p style="color: #28a745; font-weight: 600; margin-bottom: 0.5rem;">‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</p>' +
                '<div class="form-group">' +
                '<label class="form-label" style="color: #ccc;">–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø—Ä–∏ —É—Å–ø–µ—Ö–µ:</label>' +
                '<select class="form-select action-switch-type" style="margin-bottom: 0.5rem;">' +
                '<option value="">–ù–µ –º–µ–Ω—è—Ç—å —Ä–æ–ª—å</option>' +
                '<option value="victim">–ù–∞ —Ä–æ–ª—å –∂–µ—Ä—Ç–≤—ã</option>' +
                '<option value="role_id">–ù–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ä–æ–ª—å (ID)</option>' +
                '</select>' +
                '<input type="number" class="form-input action-switch-role-id" placeholder="ID —Ä–æ–ª–∏" style="display: none; margin-bottom: 0.5rem;"/>' +
                '</div>' +
                '<input type="text" class="form-input action-success-msg" placeholder="–¢–µ–∫—Å—Ç –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ö–æ–¥–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-success-chat" placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ö–æ–¥–∞ –≤ –æ–±—â–µ–º —á–∞—Ç–µ" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-success-victim" placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏ –∂–µ—Ä—Ç–≤–µ" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-success-actor" placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é"/>' +
                '</div>' +
                '<div class="section-divider">' +
                '<p style="color: #dc3545; font-weight: 600; margin-bottom: 0.5rem;">‚ùå –ù–µ—É–¥–∞—á–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</p>' +
                '<input type="text" class="form-input action-failed-msg" placeholder="–¢–µ–∫—Å—Ç –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ö–æ–¥–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-failed-chat" placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ö–æ–¥–∞ –≤ –æ–±—â–µ–º —á–∞—Ç–µ" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-failed-victim" placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–∞–ª—å–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏ –∂–µ—Ä—Ç–≤–µ" style="margin-bottom: 0.5rem;"/>' +
                '<input type="text" class="form-input action-failed-actor" placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–∞–ª—å–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é"/>' +
                '</div>' +
                '</div>';
            
            container.innerHTML += actionHtml;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è switch_type
            var switchSelect = document.getElementById('action' + actionCounter).querySelector('.action-switch-type');
            var roleIdInput = document.getElementById('action' + actionCounter).querySelector('.action-switch-role-id');
            
            switchSelect.addEventListener('change', function() {
                if (this.value === 'role_id') {
                    roleIdInput.style.display = 'block';
                } else {
                    roleIdInput.style.display = 'none';
                }
            });
            
            updateStats();
            updatePreview();
        }

        function removeAction(id) {
            var element = document.getElementById('action' + id);
            if (element) {
                element.remove();
            }
            
            var container = document.getElementById('actionsContainer');
            if (!container.querySelector('.action-card')) {
                container.innerHTML = '<p style="text-align: center; color: #888; padding: 2rem;">–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ"</p>';
            }
            
            updateStats();
            updatePreview();
        }

        function collectRoleData() {
            var actions = [];
            var actionCards = document.querySelectorAll('.action-card');
            
            for (var i = 0; i < actionCards.length; i++) {
                var card = actionCards[i];
                var actionType = card.querySelector('.action-type').value;
                var typeObj;
                
                // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±–æ—Ä–∞
                if (actionType === 'RoleActionTypeKill') {
                    typeObj = { ID: 'RoleActionTypeKill' };
                } else if (actionType === 'RoleActionTypeHealing') {
                    typeObj = { ID: 'RoleActionTypeHealing' };
                } else if (actionType === 'RoleActionTypeFreeze') {
                    var isForce = card.querySelector('.action-freeze-force').value === 'true';
                    typeObj = { 
                        ID: 'RoleActionTypeFreeze',
                        is_force: isForce
                    };
                } else {
                    typeObj = { ID: 'RoleActionTypeEmpty' };
                }
                
                // role_allowed –∏ role_freeze
                var roleAllowedInput = card.querySelector('.action-role-allowed').value;
                var roleFreezeInput = card.querySelector('.action-role-freeze').value;
                var isBlacklist = card.querySelector('.action-blacklist').checked;
                
                var roleAllowed = null;
                var roleFreeze = null;
                
                if (roleAllowedInput) {
                    var roleIds = roleAllowedInput.split(',').map(function(id) { return parseInt(id.trim()); });
                    if (isBlacklist) {
                        roleAllowed = { ID: 'RoleListTypeBlackList', role_ids: roleIds };
                    } else {
                        roleAllowed = { ID: 'RoleListTypeWhiteList', role_ids: roleIds };
                    }
                }
                
                if (roleFreezeInput) {
                    var freezeIds = roleFreezeInput.split(',').map(function(id) { return parseInt(id.trim()); });
                    roleFreeze = { ID: 'RoleListTypeWhiteList', role_ids: freezeIds };
                }
                
                // switch_role
                var switchType = card.querySelector('.action-switch-type').value;
                var switchRole = null;
                
                if (switchType === 'victim') {
                    switchRole = { ID: 'RoleSwitchToVictimRole' };
                } else if (switchType === 'role_id') {
                    var roleId = parseInt(card.querySelector('.action-switch-role-id').value);
                    if (roleId) {
                        switchRole = { ID: 'RoleSwitchToRoleId', role_id: roleId };
                    }
                }
                
                var actionObj = {
                    name: card.querySelector('.action-name').value || '–ù–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                    type: typeObj,
                    count_victims: parseInt(card.querySelector('.action-victims').value) || 1,
                    cooldown: parseInt(card.querySelector('.action-cooldown').value) || 0,
                    process: {
                        msg: card.querySelector('.action-process-msg').value || '',
                        msg_pm: card.querySelector('.action-process-pm').value || '',
                        msg_chat: card.querySelector('.action-process-chat').value || ''
                    },
                    success: {
                        switch_role: switchRole,
                        msg: card.querySelector('.action-success-msg').value || '',
                        msg_victim: card.querySelector('.action-success-victim').value || '',
                        msg_actor: card.querySelector('.action-success-actor').value || ''
                    },
                    failed: {
                        msg: card.querySelector('.action-failed-msg').value || '',
                        msg_victim: card.querySelector('.action-failed-victim').value || '',
                        msg_actor: card.querySelector('.action-failed-actor').value || ''
                    }
                };
                
                if (roleAllowed) actionObj.role_allowed = roleAllowed;
                if (roleFreeze) actionObj.role_freeze = roleFreeze;
                
                actions.push(actionObj);
            }
            
            var customEmojiId = document.getElementById('customEmojiId').value;
            var emojiObj = {
                emoji: document.getElementById('roleEmoji').value || 'üé≠'
            };
            
            // –î–æ–±–∞–≤–ª—è–µ–º custom_emoji_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
            if (customEmojiId) {
                emojiObj.custom_emoji_id = parseInt(customEmojiId);
            }
            
            return {
                ID: 'Role',
                name: {
                    name: document.getElementById('roleName').value || '–ù–æ–≤–∞—è —Ä–æ–ª—å',
                    emoji: emojiObj
                },
                description: document.getElementById('roleDescription').value || '',
                fraction: { ID: selectedFaction },
                cash_award: parseInt(document.getElementById('cashAward').value) || 0,
                required_players: parseInt(document.getElementById('requiredPlayers').value) || 5,
                weight_vote: parseInt(document.getElementById('weightVote').value) || 1,
                revenge_kill: document.getElementById('revengeKill').checked,
                enabled: document.getElementById('enabled').checked,
                msg_select_action: document.getElementById('msgSelectAction').value || '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ',
                msg_skip: {
                    btn_name: document.getElementById('skipBtnName').value || '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥',
                    message: document.getElementById('skipMessage').value || '–ò–≥—Ä–æ–∫ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥'
                },
                actions: actions
            };
        }

        function generateAddNew() {
            var roleData = collectRoleData();
            var chatId = document.getElementById('chatId').value;
            
            var apiRequest = {
                ID: 'AddNewCustomRole',
                chat_id: parseInt(chatId) || 0,
                role: roleData
            };
            
            var json = JSON.stringify(apiRequest, null, 2);
            document.getElementById('jsonOutput').textContent = json;
            document.getElementById('jsonPreviewBox').style.display = 'block';
        }

        function generateEdit() {
            var roleData = collectRoleData();
            var chatId = document.getElementById('chatId').value;
            var roleId = document.getElementById('roleId').value;
            
            var apiRequest = {
                ID: 'EditCustomRole',
                chat_id: parseInt(chatId) || 0,
                role_id: parseInt(roleId) || 0,
                role: roleData
            };
            
            var json = JSON.stringify(apiRequest, null, 2);
            document.getElementById('jsonOutput').textContent = json;
            document.getElementById('jsonPreviewBox').style.display = 'block';
        }

        function copyJson() {
            var text = document.getElementById('jsonOutput').textContent;
            navigator.clipboard.writeText(text).then(function() {
                alert('JSON —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            });
        }

        function resetForm() {
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.')) {
                document.getElementById('roleName').value = '';
                document.getElementById('roleEmoji').value = 'üé≠';
                document.getElementById('customEmojiId').value = '';
                document.getElementById('roleDescription').value = '';
                document.getElementById('cashAward').value = '0';
                document.getElementById('requiredPlayers').value = '5';
                document.getElementById('weightVote').value = '1';
                document.getElementById('revengeKill').checked = false;
                document.getElementById('enabled').checked = true;
                document.getElementById('msgSelectAction').value = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ';
                document.getElementById('skipBtnName').value = '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥';
                document.getElementById('skipMessage').value = '–ò–≥—Ä–æ–∫ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥';
                document.getElementById('chatId').value = '';
                document.getElementById('roleId').value = '';
                document.getElementById('actionsContainer').innerHTML = '<p style="text-align: center; color: #888; padding: 2rem;">–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ"</p>';
                document.getElementById('jsonPreviewBox').style.display = 'none';
                actionCounter = 0;
                
                var buttons = document.querySelectorAll('.faction-btn');
                for (var i = 0; i < buttons.length; i++) {
                    buttons[i].classList.remove('active');
                }
                buttons[0].classList.add('active');
                selectedFaction = 'RoleFractonPeace';
                
                updateStats();
                updatePreview();
            }
        }

        function updateStats() {
            var actionsCount = document.querySelectorAll('.action-card').length;
            document.getElementById('statActions').textContent = actionsCount;
        }

        function updatePreview() {
            var roleName = document.getElementById('roleName').value || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
            var roleEmoji = document.getElementById('roleEmoji').value || 'üé≠';
            var customEmojiId = document.getElementById('customEmojiId').value;
            var roleDescription = document.getElementById('roleDescription').value;
            var actionsCount = document.querySelectorAll('.action-card').length;
            
            var fractionNames = {
                'RoleFractonPeace': 'üåø –ú–∏—Ä–Ω–∞—è —Ñ—Ä–∞–∫—Ü–∏—è',
                'RoleFractonMafia': 'üï∂ –§—Ä–∞–∫—Ü–∏—è –º–∞—Ñ–∏–∏',
                'RoleFractonNeutral': '‚öñÔ∏è –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è —Ñ—Ä–∞–∫—Ü–∏—è',
                'RoleFractonKiller': 'üî™ –§—Ä–∞–∫—Ü–∏—è —É–±–∏–π—Ü—ã'
            };
            
            var emojiDisplay = roleEmoji;
            if (customEmojiId) {
                emojiDisplay = roleEmoji + ' (Premium: ' + customEmojiId + ')';
            }
            
            var html = '<div style="background: rgba(0,0,0,0.3); padding: 1rem; border-radius: 10px; margin-bottom: 1rem;">' +
                '<div style="display: flex; align-items: center; gap: 1rem;">' +
                '<span style="font-size: 3rem;">' + roleEmoji + '</span>' +
                '<div>' +
                '<p style="font-size: 1.2rem; font-weight: bold; color: #fff;">' + roleName + '</p>' +
                '<p style="color: #888; font-size: 0.9rem;">' + fractionNames[selectedFaction] + '</p>' +
                (customEmojiId ? '<p style="color: #ffd700; font-size: 0.8rem;">Premium Emoji ID: ' + customEmojiId + '</p>' : '') +
                '</div>' +
                '</div>' +
                '</div>';
            
            if (roleDescription) {
                html += '<div style="background: rgba(0,0,0,0.3); padding: 1rem; border-radius: 10px; margin-bottom: 1rem;">' +
                    '<p style="color: #ccc; font-size: 0.9rem;">' + roleDescription + '</p>' +
                    '</div>';
            }
            
            html += '<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 0.5rem;">' +
                '<div style="background: rgba(0,0,0,0.3); padding: 0.75rem; border-radius: 8px; text-align: center;">' +
                '<p style="color: #888; font-size: 0.8rem;">–î–µ–π—Å—Ç–≤–∏–π</p>' +
                '<p style="color: #28a745; font-weight: bold;">' + actionsCount + '</p>' +
                '</div>' +
                '<div style="background: rgba(0,0,0,0.3); padding: 0.75rem; border-radius: 8px; text-align: center;">' +
                '<p style="color: #888; font-size: 0.8rem;">–ù–∞–≥—Ä–∞–¥–∞</p>' +
                '<p style="color: #ffd700; font-weight: bold;">' + (document.getElementById('cashAward').value || '0') + ' ‚ÇΩ</p>' +
                '</div>' +
                '</div>';
            
            document.getElementById('rolePreview').innerHTML = html;
        }

        // Auto-update preview on input
        window.onload = function() {
            updateStats();
            updatePreview();
            
            var inputs = document.querySelectorAll('input, textarea, select');
            for (var i = 0; i < inputs.length; i++) {
                inputs[i].addEventListener('input', updatePreview);
                inputs[i].addEventListener('change', updatePreview);
            }
        };
    ]]>
    </script>
</body>
</html>
